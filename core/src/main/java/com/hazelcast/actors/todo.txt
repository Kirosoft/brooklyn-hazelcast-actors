TODO

- not possible to do normal hazelcast operations from the Actor.init

- constructing a more complex object from the json msg

- add migration

- cleaning up of execution

- a future returned by the send

- using the fork join executor.

- optimization for local calls.

- receive method can be cached.

- deal with receive method failure in the actorcontainer

- when a message is send, currently you won't get any guarantee if it is delivered.

- the mailbox of the actor is not durable, it is an ordinary blocking queue.

- the ability to create durable/non durable actors.

- receive methods should be able to throw checked exception

- when sending of a message fails because actor doesn't exist, actor should be notified

- when sending of a message fails because mailbox too full, the actor should be notified.

- caching of receive method.

DONE

- it should be possible to do a receive without a sender

- when the processing of a message fails, the actor that send the message should be notified?

- an actor should be able to listen to failures in other actors.

- rest api for sending messages to actors.

- added a scheduling mechanism on the ActorRuntime so that messages can repeatedly be send to an actor.

- added the ListAttribute and cleaned up the WebCluster

- support for dispatch

- configure dependencies from the serviceconfig

- dependency injection in the actor

- the entity should have access to management context.

- the recipe should be able to pass properties.

- the ActorRef needs to be available in the Actor.

- stopping an actor.

- the actor is receiving the sender

- the actor needs to be able to get an 'init' so it can initialize

- the actor needs to get access to the ActorSystem

- the actor needs to get access to the HazelcastInstance
